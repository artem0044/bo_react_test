{"ast":null,"code":"import{throttle}from\"lodash\";import moment from\"moment-timezone\";import{getUserTimezone}from\"@helpers/timezone\";const channelToSubscription=new Map();export const subscribeOnStream=(symbolInfo,resolution,onRealtimeCallback,subscriberUID)=>{const channelString=\"SYMBOL.\".concat(symbolInfo.ticker);const handler={id:subscriberUID,callback:onRealtimeCallback};let subscriptionItem=channelToSubscription.get(channelString);if(subscriptionItem){subscriptionItem.handlers.push(handler);return;}subscriptionItem={subscriberUID,resolution,handlers:[handler]};channelToSubscription.set(channelString,subscriptionItem);const throttledCallback=throttle(realTimeData=>{handler.callback(realTimeData);},500);window.Echo.channel(channelString).listen(\"ChartUpdate\",e=>{const realTimeData={time:moment(e.time).tz(getUserTimezone()).valueOf(),open:e.open,high:e.high,low:e.low,close:e.close};throttledCallback(realTimeData);});};export const unsubscribeFromStream=subscriberUID=>{for(const channelString of channelToSubscription.keys()){const subscriptionItem=channelToSubscription.get(channelString);const handlerIndex=subscriptionItem.handlers.findIndex(handler=>handler.id===subscriberUID);if(handlerIndex!==-1){subscriptionItem.handlers.splice(handlerIndex,1);if(subscriptionItem.handlers.length===0){window.Echo.leave(channelString);channelToSubscription.delete(channelString);break;}}}};","map":{"version":3,"names":["throttle","moment","getUserTimezone","channelToSubscription","Map","subscribeOnStream","symbolInfo","resolution","onRealtimeCallback","subscriberUID","channelString","concat","ticker","handler","id","callback","subscriptionItem","get","handlers","push","set","throttledCallback","realTimeData","window","Echo","channel","listen","e","time","tz","valueOf","open","high","low","close","unsubscribeFromStream","keys","handlerIndex","findIndex","splice","length","leave","delete"],"sources":["/Users/admin/Desktop/untitled folder/bo_react_test/src/components/pages/Trading/components/TradingViewWidget/streaming.js"],"sourcesContent":["import {throttle} from \"lodash\";\nimport moment from \"moment-timezone\";\nimport {getUserTimezone} from \"@helpers/timezone\";\n\nconst channelToSubscription = new Map();\n\n\nexport const subscribeOnStream = (symbolInfo, resolution, onRealtimeCallback, subscriberUID) => {\n  const channelString = `SYMBOL.${symbolInfo.ticker}`;\n  const handler = {\n    id: subscriberUID,\n    callback: onRealtimeCallback,\n  };\n\n  let subscriptionItem = channelToSubscription.get(channelString);\n  if (subscriptionItem) {\n    subscriptionItem.handlers.push(handler);\n    return;\n  }\n\n  subscriptionItem = {\n    subscriberUID,\n    resolution,\n    handlers: [handler],\n  };\n\n  channelToSubscription.set(channelString, subscriptionItem);\n\n  const throttledCallback = throttle((realTimeData) => {\n    handler.callback(realTimeData);\n  }, 500);\n\n  window.Echo.channel(channelString).listen(\n    \"ChartUpdate\",\n    (e) => {\n      const realTimeData = {\n        time: moment(e.time).tz(getUserTimezone()).valueOf(),\n        open: e.open,\n        high: e.high,\n        low: e.low,\n        close: e.close,\n      };\n      throttledCallback(realTimeData);\n    }\n  );\n}\n\nexport const unsubscribeFromStream = (subscriberUID) => {\n  for (const channelString of channelToSubscription.keys()) {\n    const subscriptionItem = channelToSubscription.get(channelString);\n    const handlerIndex = subscriptionItem.handlers.findIndex(\n      (handler) => handler.id === subscriberUID\n    );\n\n    if (handlerIndex !== -1) {\n      subscriptionItem.handlers.splice(handlerIndex, 1);\n      if (subscriptionItem.handlers.length === 0) {\n        window.Echo.leave(channelString);\n        channelToSubscription.delete(channelString);\n        break;\n      }\n    }\n  }\n}"],"mappings":"AAAA,OAAQA,QAAQ,KAAO,QAAQ,CAC/B,MAAO,CAAAC,MAAM,KAAM,iBAAiB,CACpC,OAAQC,eAAe,KAAO,mBAAmB,CAEjD,KAAM,CAAAC,qBAAqB,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CAGvC,MAAO,MAAM,CAAAC,iBAAiB,CAAGA,CAACC,UAAU,CAAEC,UAAU,CAAEC,kBAAkB,CAAEC,aAAa,GAAK,CAC9F,KAAM,CAAAC,aAAa,WAAAC,MAAA,CAAaL,UAAU,CAACM,MAAM,CAAE,CACnD,KAAM,CAAAC,OAAO,CAAG,CACdC,EAAE,CAAEL,aAAa,CACjBM,QAAQ,CAAEP,kBACZ,CAAC,CAED,GAAI,CAAAQ,gBAAgB,CAAGb,qBAAqB,CAACc,GAAG,CAACP,aAAa,CAAC,CAC/D,GAAIM,gBAAgB,CAAE,CACpBA,gBAAgB,CAACE,QAAQ,CAACC,IAAI,CAACN,OAAO,CAAC,CACvC,OACF,CAEAG,gBAAgB,CAAG,CACjBP,aAAa,CACbF,UAAU,CACVW,QAAQ,CAAE,CAACL,OAAO,CACpB,CAAC,CAEDV,qBAAqB,CAACiB,GAAG,CAACV,aAAa,CAAEM,gBAAgB,CAAC,CAE1D,KAAM,CAAAK,iBAAiB,CAAGrB,QAAQ,CAAEsB,YAAY,EAAK,CACnDT,OAAO,CAACE,QAAQ,CAACO,YAAY,CAAC,CAChC,CAAC,CAAE,GAAG,CAAC,CAEPC,MAAM,CAACC,IAAI,CAACC,OAAO,CAACf,aAAa,CAAC,CAACgB,MAAM,CACvC,aAAa,CACZC,CAAC,EAAK,CACL,KAAM,CAAAL,YAAY,CAAG,CACnBM,IAAI,CAAE3B,MAAM,CAAC0B,CAAC,CAACC,IAAI,CAAC,CAACC,EAAE,CAAC3B,eAAe,CAAC,CAAC,CAAC,CAAC4B,OAAO,CAAC,CAAC,CACpDC,IAAI,CAAEJ,CAAC,CAACI,IAAI,CACZC,IAAI,CAAEL,CAAC,CAACK,IAAI,CACZC,GAAG,CAAEN,CAAC,CAACM,GAAG,CACVC,KAAK,CAAEP,CAAC,CAACO,KACX,CAAC,CACDb,iBAAiB,CAACC,YAAY,CAAC,CACjC,CACF,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAa,qBAAqB,CAAI1B,aAAa,EAAK,CACtD,IAAK,KAAM,CAAAC,aAAa,GAAI,CAAAP,qBAAqB,CAACiC,IAAI,CAAC,CAAC,CAAE,CACxD,KAAM,CAAApB,gBAAgB,CAAGb,qBAAqB,CAACc,GAAG,CAACP,aAAa,CAAC,CACjE,KAAM,CAAA2B,YAAY,CAAGrB,gBAAgB,CAACE,QAAQ,CAACoB,SAAS,CACrDzB,OAAO,EAAKA,OAAO,CAACC,EAAE,GAAKL,aAC9B,CAAC,CAED,GAAI4B,YAAY,GAAK,CAAC,CAAC,CAAE,CACvBrB,gBAAgB,CAACE,QAAQ,CAACqB,MAAM,CAACF,YAAY,CAAE,CAAC,CAAC,CACjD,GAAIrB,gBAAgB,CAACE,QAAQ,CAACsB,MAAM,GAAK,CAAC,CAAE,CAC1CjB,MAAM,CAACC,IAAI,CAACiB,KAAK,CAAC/B,aAAa,CAAC,CAChCP,qBAAqB,CAACuC,MAAM,CAAChC,aAAa,CAAC,CAC3C,MACF,CACF,CACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}