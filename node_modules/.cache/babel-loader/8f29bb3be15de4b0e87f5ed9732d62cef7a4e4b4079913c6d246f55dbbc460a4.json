{"ast":null,"code":"import axios from\"@helpers/axios/public.axios\";import{AUTH}from\"../../constants\";import{loadState}from\"@helpers/storage/storeLocalData\";export const registration=_ref=>{let{email,password}=_ref;return async dispatch=>{try{const p_hash=loadState(\"p_hash\");const p_id=loadState(\"p_id\");await axios.post(\"/register\",{email,password,name:\"test\",type:\"customer\",p_hash,p_id});}catch(e){dispatch({type:AUTH.AUTH_ERROR,payload:e.response.data.message});throw e;}};};","map":{"version":3,"names":["axios","AUTH","loadState","registration","_ref","email","password","dispatch","p_hash","p_id","post","name","type","e","AUTH_ERROR","payload","response","data","message"],"sources":["/Users/admin/Desktop/untitled folder/bo_react_test/src/actions/auth/registration.js"],"sourcesContent":["import axios from \"@helpers/axios/public.axios\";\nimport { AUTH } from \"../../constants\";\nimport { loadState } from \"@helpers/storage/storeLocalData\";\n\nexport const registration =\n  ({ email, password }) =>\n  async (dispatch) => {\n    try {\n      const p_hash = loadState(\"p_hash\");\n      const p_id = loadState(\"p_id\");\n\n      await axios.post(\"/register\", {\n        email,\n        password,\n        name: \"test\",\n        type: \"customer\",\n        p_hash,\n        p_id,\n      });\n    } catch (e) {\n      dispatch({ type: AUTH.AUTH_ERROR, payload: e.response.data.message });\n      throw e;\n    }\n  };\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,6BAA6B,CAC/C,OAASC,IAAI,KAAQ,iBAAiB,CACtC,OAASC,SAAS,KAAQ,iCAAiC,CAE3D,MAAO,MAAM,CAAAC,YAAY,CACvBC,IAAA,MAAC,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAAF,IAAA,OACpB,MAAO,CAAAG,QAAQ,EAAK,CAClB,GAAI,CACF,KAAM,CAAAC,MAAM,CAAGN,SAAS,CAAC,QAAQ,CAAC,CAClC,KAAM,CAAAO,IAAI,CAAGP,SAAS,CAAC,MAAM,CAAC,CAE9B,KAAM,CAAAF,KAAK,CAACU,IAAI,CAAC,WAAW,CAAE,CAC5BL,KAAK,CACLC,QAAQ,CACRK,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,UAAU,CAChBJ,MAAM,CACNC,IACF,CAAC,CAAC,CACJ,CAAE,MAAOI,CAAC,CAAE,CACVN,QAAQ,CAAC,CAAEK,IAAI,CAAEX,IAAI,CAACa,UAAU,CAAEC,OAAO,CAAEF,CAAC,CAACG,QAAQ,CAACC,IAAI,CAACC,OAAQ,CAAC,CAAC,CACrE,KAAM,CAAAL,CAAC,CACT,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}