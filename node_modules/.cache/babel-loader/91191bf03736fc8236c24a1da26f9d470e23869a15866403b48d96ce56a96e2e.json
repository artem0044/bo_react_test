{"ast":null,"code":"// Creates array of digits to vertically scroll through\nvar formatForDisplay = function (number, includeDecimals, decimalPrecision, includeCommas) {\n  var decimalCount = includeDecimals ? decimalPrecision : 0;\n  var parsedNumber = parseFloat(\"\".concat(Math.max(number, 0))).toFixed(decimalCount);\n  var numberToFormat = includeCommas ? parseFloat(parsedNumber).toLocaleString('en-US', {\n    minimumFractionDigits: includeDecimals ? decimalPrecision : 0\n  }) : parsedNumber;\n  return numberToFormat.split('').reverse();\n};\nexport default formatForDisplay;","map":{"version":3,"names":["formatForDisplay","number","includeDecimals","decimalPrecision","includeCommas","decimalCount","parsedNumber","parseFloat","concat","Math","max","toFixed","numberToFormat","toLocaleString","minimumFractionDigits","split","reverse"],"sources":["/Users/admin/Desktop/untitled folder/bo_react_test/node_modules/react-animated-counter/dist/esm/util/formatForDisplay.js"],"sourcesContent":["// Creates array of digits to vertically scroll through\nvar formatForDisplay = function (number, includeDecimals, decimalPrecision, includeCommas) {\n    var decimalCount = includeDecimals ? decimalPrecision : 0;\n    var parsedNumber = parseFloat(\"\".concat(Math.max(number, 0))).toFixed(decimalCount);\n    var numberToFormat = includeCommas ? parseFloat(parsedNumber).toLocaleString('en-US', { minimumFractionDigits: includeDecimals ? decimalPrecision : 0 }) : parsedNumber;\n    return numberToFormat.split('').reverse();\n};\nexport default formatForDisplay;"],"mappings":"AAAA;AACA,IAAIA,gBAAgB,GAAG,SAAAA,CAAUC,MAAM,EAAEC,eAAe,EAAEC,gBAAgB,EAAEC,aAAa,EAAE;EACvF,IAAIC,YAAY,GAAGH,eAAe,GAAGC,gBAAgB,GAAG,CAAC;EACzD,IAAIG,YAAY,GAAGC,UAAU,CAAC,EAAE,CAACC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACT,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAACU,OAAO,CAACN,YAAY,CAAC;EACnF,IAAIO,cAAc,GAAGR,aAAa,GAAGG,UAAU,CAACD,YAAY,CAAC,CAACO,cAAc,CAAC,OAAO,EAAE;IAAEC,qBAAqB,EAAEZ,eAAe,GAAGC,gBAAgB,GAAG;EAAE,CAAC,CAAC,GAAGG,YAAY;EACvK,OAAOM,cAAc,CAACG,KAAK,CAAC,EAAE,CAAC,CAACC,OAAO,CAAC,CAAC;AAC7C,CAAC;AACD,eAAehB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}