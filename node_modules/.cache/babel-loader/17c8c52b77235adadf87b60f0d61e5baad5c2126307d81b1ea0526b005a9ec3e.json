{"ast":null,"code":"import { BestFitMatcher } from './BestFitMatcher';\nimport { CanonicalizeUValue } from './CanonicalizeUValue';\nimport { InsertUnicodeExtensionAndCanonicalize } from './InsertUnicodeExtensionAndCanonicalize';\nimport { LookupMatcher } from './LookupMatcher';\nimport { UnicodeExtensionComponents } from './UnicodeExtensionComponents';\nimport { invariant } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-resolvelocale\n */\nexport function ResolveLocale(availableLocales, requestedLocales, options, relevantExtensionKeys, localeData, getDefaultLocale) {\n  var _a;\n  var matcher = options.localeMatcher;\n  var r;\n  if (matcher === 'lookup') {\n    r = LookupMatcher(Array.from(availableLocales), requestedLocales, getDefaultLocale);\n  } else {\n    r = BestFitMatcher(Array.from(availableLocales), requestedLocales, getDefaultLocale);\n  }\n  if (r == null) {\n    r = {\n      locale: getDefaultLocale(),\n      extension: ''\n    };\n  }\n  var foundLocale = r.locale;\n  var foundLocaleData = localeData[foundLocale];\n  // TODO: We can't really guarantee that the locale data is available\n  // invariant(\n  //   foundLocaleData !== undefined,\n  //   `Missing locale data for ${foundLocale}`\n  // )\n  var result = {\n    locale: 'en',\n    dataLocale: foundLocale\n  };\n  var components;\n  var keywords;\n  if (r.extension) {\n    components = UnicodeExtensionComponents(r.extension);\n    keywords = components.keywords;\n  } else {\n    keywords = [];\n  }\n  var supportedKeywords = [];\n  var _loop_1 = function (key) {\n    // TODO: Shouldn't default to empty array, see TODO above\n    var keyLocaleData = (_a = foundLocaleData === null || foundLocaleData === void 0 ? void 0 : foundLocaleData[key]) !== null && _a !== void 0 ? _a : [];\n    invariant(Array.isArray(keyLocaleData), \"keyLocaleData for \".concat(key, \" must be an array\"));\n    var value = keyLocaleData[0];\n    invariant(value === undefined || typeof value === 'string', \"value must be a string or undefined\");\n    var supportedKeyword = void 0;\n    var entry = keywords.find(function (k) {\n      return k.key === key;\n    });\n    if (entry) {\n      var requestedValue = entry.value;\n      if (requestedValue !== '') {\n        if (keyLocaleData.indexOf(requestedValue) > -1) {\n          value = requestedValue;\n          supportedKeyword = {\n            key: key,\n            value: value\n          };\n        }\n      } else if (keyLocaleData.indexOf('true') > -1) {\n        value = 'true';\n        supportedKeyword = {\n          key: key,\n          value: value\n        };\n      }\n    }\n    var optionsValue = options[key];\n    invariant(optionsValue == null || typeof optionsValue === 'string', \"optionsValue must be a string or undefined\");\n    if (typeof optionsValue === 'string') {\n      var ukey = key.toLowerCase();\n      optionsValue = CanonicalizeUValue(ukey, optionsValue);\n      if (optionsValue === '') {\n        optionsValue = 'true';\n      }\n    }\n    if (optionsValue !== value && keyLocaleData.indexOf(optionsValue) > -1) {\n      value = optionsValue;\n      supportedKeyword = undefined;\n    }\n    if (supportedKeyword) {\n      supportedKeywords.push(supportedKeyword);\n    }\n    result[key] = value;\n  };\n  for (var _i = 0, relevantExtensionKeys_1 = relevantExtensionKeys; _i < relevantExtensionKeys_1.length; _i++) {\n    var key = relevantExtensionKeys_1[_i];\n    _loop_1(key);\n  }\n  var supportedAttributes = [];\n  if (supportedKeywords.length > 0) {\n    supportedAttributes = [];\n    foundLocale = InsertUnicodeExtensionAndCanonicalize(foundLocale, supportedAttributes, supportedKeywords);\n  }\n  result.locale = foundLocale;\n  return result;\n}","map":{"version":3,"names":["BestFitMatcher","CanonicalizeUValue","InsertUnicodeExtensionAndCanonicalize","LookupMatcher","UnicodeExtensionComponents","invariant","ResolveLocale","availableLocales","requestedLocales","options","relevantExtensionKeys","localeData","getDefaultLocale","_a","matcher","localeMatcher","r","Array","from","locale","extension","foundLocale","foundLocaleData","result","dataLocale","components","keywords","supportedKeywords","_loop_1","key","keyLocaleData","isArray","concat","value","undefined","supportedKeyword","entry","find","k","requestedValue","indexOf","optionsValue","ukey","toLowerCase","push","_i","relevantExtensionKeys_1","length","supportedAttributes"],"sources":["/Users/admin/Desktop/untitled folder/bo_react_test/node_modules/@formatjs/intl-localematcher/lib/abstract/ResolveLocale.js"],"sourcesContent":["import { BestFitMatcher } from './BestFitMatcher';\nimport { CanonicalizeUValue } from './CanonicalizeUValue';\nimport { InsertUnicodeExtensionAndCanonicalize } from './InsertUnicodeExtensionAndCanonicalize';\nimport { LookupMatcher } from './LookupMatcher';\nimport { UnicodeExtensionComponents } from './UnicodeExtensionComponents';\nimport { invariant } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-resolvelocale\n */\nexport function ResolveLocale(availableLocales, requestedLocales, options, relevantExtensionKeys, localeData, getDefaultLocale) {\n    var _a;\n    var matcher = options.localeMatcher;\n    var r;\n    if (matcher === 'lookup') {\n        r = LookupMatcher(Array.from(availableLocales), requestedLocales, getDefaultLocale);\n    }\n    else {\n        r = BestFitMatcher(Array.from(availableLocales), requestedLocales, getDefaultLocale);\n    }\n    if (r == null) {\n        r = {\n            locale: getDefaultLocale(),\n            extension: '',\n        };\n    }\n    var foundLocale = r.locale;\n    var foundLocaleData = localeData[foundLocale];\n    // TODO: We can't really guarantee that the locale data is available\n    // invariant(\n    //   foundLocaleData !== undefined,\n    //   `Missing locale data for ${foundLocale}`\n    // )\n    var result = { locale: 'en', dataLocale: foundLocale };\n    var components;\n    var keywords;\n    if (r.extension) {\n        components = UnicodeExtensionComponents(r.extension);\n        keywords = components.keywords;\n    }\n    else {\n        keywords = [];\n    }\n    var supportedKeywords = [];\n    var _loop_1 = function (key) {\n        // TODO: Shouldn't default to empty array, see TODO above\n        var keyLocaleData = (_a = foundLocaleData === null || foundLocaleData === void 0 ? void 0 : foundLocaleData[key]) !== null && _a !== void 0 ? _a : [];\n        invariant(Array.isArray(keyLocaleData), \"keyLocaleData for \".concat(key, \" must be an array\"));\n        var value = keyLocaleData[0];\n        invariant(value === undefined || typeof value === 'string', \"value must be a string or undefined\");\n        var supportedKeyword = void 0;\n        var entry = keywords.find(function (k) { return k.key === key; });\n        if (entry) {\n            var requestedValue = entry.value;\n            if (requestedValue !== '') {\n                if (keyLocaleData.indexOf(requestedValue) > -1) {\n                    value = requestedValue;\n                    supportedKeyword = {\n                        key: key,\n                        value: value,\n                    };\n                }\n            }\n            else if (keyLocaleData.indexOf('true') > -1) {\n                value = 'true';\n                supportedKeyword = {\n                    key: key,\n                    value: value,\n                };\n            }\n        }\n        var optionsValue = options[key];\n        invariant(optionsValue == null || typeof optionsValue === 'string', \"optionsValue must be a string or undefined\");\n        if (typeof optionsValue === 'string') {\n            var ukey = key.toLowerCase();\n            optionsValue = CanonicalizeUValue(ukey, optionsValue);\n            if (optionsValue === '') {\n                optionsValue = 'true';\n            }\n        }\n        if (optionsValue !== value && keyLocaleData.indexOf(optionsValue) > -1) {\n            value = optionsValue;\n            supportedKeyword = undefined;\n        }\n        if (supportedKeyword) {\n            supportedKeywords.push(supportedKeyword);\n        }\n        result[key] = value;\n    };\n    for (var _i = 0, relevantExtensionKeys_1 = relevantExtensionKeys; _i < relevantExtensionKeys_1.length; _i++) {\n        var key = relevantExtensionKeys_1[_i];\n        _loop_1(key);\n    }\n    var supportedAttributes = [];\n    if (supportedKeywords.length > 0) {\n        supportedAttributes = [];\n        foundLocale = InsertUnicodeExtensionAndCanonicalize(foundLocale, supportedAttributes, supportedKeywords);\n    }\n    result.locale = foundLocale;\n    return result;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}