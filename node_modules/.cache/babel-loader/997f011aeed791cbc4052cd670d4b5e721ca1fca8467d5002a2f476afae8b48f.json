{"ast":null,"code":"import _objectSpread from \"/Users/admin/Desktop/untitled folder/bo_react_test/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/admin/Desktop/untitled folder/bo_react_test/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _defineProperty from \"/Users/admin/Desktop/untitled folder/bo_react_test/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nconst _excluded = [\"text\", \"onCopy\", \"options\", \"children\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nexport class CopyToClipboard extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"onClick\", event => {\n      const {\n        text,\n        onCopy,\n        children,\n        options\n      } = this.props;\n      const elem = React.Children.only(children);\n      const result = copy(text, options);\n      if (onCopy) {\n        onCopy(text, result);\n      }\n\n      // Bypass onClick if it was present\n      if (elem && elem.props && typeof elem.props.onClick === 'function') {\n        elem.props.onClick(event);\n      }\n    });\n  }\n  render() {\n    const _this$props = this.props,\n      {\n        text: _text,\n        onCopy: _onCopy,\n        options: _options,\n        children\n      } = _this$props,\n      props = _objectWithoutProperties(_this$props, _excluded);\n    const elem = React.Children.only(children);\n    return React.cloneElement(elem, _objectSpread(_objectSpread({}, props), {}, {\n      onClick: this.onClick\n    }));\n  }\n}\n_defineProperty(CopyToClipboard, \"propTypes\", {\n  text: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n  onCopy: PropTypes.func,\n  options: PropTypes.shape({\n    debug: PropTypes.bool,\n    message: PropTypes.string,\n    format: PropTypes.string\n  })\n});\n_defineProperty(CopyToClipboard, \"defaultProps\", {\n  onCopy: undefined,\n  options: undefined\n});","map":{"version":3,"names":["React","PropTypes","copy","CopyToClipboard","PureComponent","constructor","arguments","_defineProperty","event","text","onCopy","children","options","props","elem","Children","only","result","onClick","render","_this$props","_text","_onCopy","_options","_objectWithoutProperties","_excluded","cloneElement","_objectSpread","string","isRequired","element","func","shape","debug","bool","message","format","undefined"],"sources":["/Users/admin/Desktop/untitled folder/bo_react_test/node_modules/react-copy-to-clipboard/src/Component.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\n\n\nexport class CopyToClipboard extends React.PureComponent {\n  static propTypes = {\n    text: PropTypes.string.isRequired,\n    children: PropTypes.element.isRequired,\n    onCopy: PropTypes.func,\n    options: PropTypes.shape({\n      debug: PropTypes.bool,\n      message: PropTypes.string,\n      format: PropTypes.string\n    })\n  };\n\n\n  static defaultProps = {\n    onCopy: undefined,\n    options: undefined\n  };\n\n\n  onClick = event => {\n    const {\n      text,\n      onCopy,\n      children,\n      options\n    } = this.props;\n\n    const elem = React.Children.only(children);\n\n    const result = copy(text, options);\n\n    if (onCopy) {\n      onCopy(text, result);\n    }\n\n    // Bypass onClick if it was present\n    if (elem && elem.props && typeof elem.props.onClick === 'function') {\n      elem.props.onClick(event);\n    }\n  };\n\n\n  render() {\n    const {\n      text: _text,\n      onCopy: _onCopy,\n      options: _options,\n      children,\n      ...props\n    } = this.props;\n    const elem = React.Children.only(children);\n\n    return React.cloneElement(elem, {...props, onClick: this.onClick});\n  }\n}\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,mBAAmB;AAGpC,OAAO,MAAMC,eAAe,SAASH,KAAK,CAACI,aAAa,CAAC;EAAAC,YAAA;IAAA,SAAAC,SAAA;IAAAC,eAAA,kBAmB7CC,KAAK,IAAI;MACjB,MAAM;QACJC,IAAI;QACJC,MAAM;QACNC,QAAQ;QACRC;MACF,CAAC,GAAG,IAAI,CAACC,KAAK;MAEd,MAAMC,IAAI,GAAGd,KAAK,CAACe,QAAQ,CAACC,IAAI,CAACL,QAAQ,CAAC;MAE1C,MAAMM,MAAM,GAAGf,IAAI,CAACO,IAAI,EAAEG,OAAO,CAAC;MAElC,IAAIF,MAAM,EAAE;QACVA,MAAM,CAACD,IAAI,EAAEQ,MAAM,CAAC;MACtB;;MAEA;MACA,IAAIH,IAAI,IAAIA,IAAI,CAACD,KAAK,IAAI,OAAOC,IAAI,CAACD,KAAK,CAACK,OAAO,KAAK,UAAU,EAAE;QAClEJ,IAAI,CAACD,KAAK,CAACK,OAAO,CAACV,KAAK,CAAC;MAC3B;IACF,CAAC;EAAA;EAGDW,MAAMA,CAAA,EAAG;IACP,MAAAC,WAAA,GAMI,IAAI,CAACP,KAAK;MANR;QACJJ,IAAI,EAAEY,KAAK;QACXX,MAAM,EAAEY,OAAO;QACfV,OAAO,EAAEW,QAAQ;QACjBZ;MAEF,CAAC,GAAAS,WAAA;MADIP,KAAK,GAAAW,wBAAA,CAAAJ,WAAA,EAAAK,SAAA;IAEV,MAAMX,IAAI,GAAGd,KAAK,CAACe,QAAQ,CAACC,IAAI,CAACL,QAAQ,CAAC;IAE1C,OAAOX,KAAK,CAAC0B,YAAY,CAACZ,IAAI,EAAAa,aAAA,CAAAA,aAAA,KAAMd,KAAK;MAAEK,OAAO,EAAE,IAAI,CAACA;IAAO,EAAC,CAAC;EACpE;AACF;AAACX,eAAA,CAtDYJ,eAAe,eACP;EACjBM,IAAI,EAAER,SAAS,CAAC2B,MAAM,CAACC,UAAU;EACjClB,QAAQ,EAAEV,SAAS,CAAC6B,OAAO,CAACD,UAAU;EACtCnB,MAAM,EAAET,SAAS,CAAC8B,IAAI;EACtBnB,OAAO,EAAEX,SAAS,CAAC+B,KAAK,CAAC;IACvBC,KAAK,EAAEhC,SAAS,CAACiC,IAAI;IACrBC,OAAO,EAAElC,SAAS,CAAC2B,MAAM;IACzBQ,MAAM,EAAEnC,SAAS,CAAC2B;EACpB,CAAC;AACH,CAAC;AAAArB,eAAA,CAVUJ,eAAe,kBAaJ;EACpBO,MAAM,EAAE2B,SAAS;EACjBzB,OAAO,EAAEyB;AACX,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}