{"ast":null,"code":"import { __assign } from \"tslib\";\nimport React, { memo, useEffect, useCallback, useRef, useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { formatForDisplay } from \"./util\";\nimport { usePrevious } from \"./hooks\";\nimport debounce from 'lodash/debounce';\nimport './styles.css';\n// Decimal element component\nvar DecimalColumn = function (_a) {\n  var fontSize = _a.fontSize,\n    color = _a.color,\n    isComma = _a.isComma,\n    digitStyles = _a.digitStyles;\n  return React.createElement(\"span\", {\n    style: __assign({\n      fontSize: fontSize,\n      lineHeight: fontSize,\n      color: color,\n      marginLeft: \"calc(-\".concat(fontSize, \" / 10)\")\n    }, digitStyles)\n  }, isComma ? ',' : '.');\n};\n// Individual number element component\nvar NumberColumn = memo(function (_a) {\n  var digit = _a.digit,\n    delta = _a.delta,\n    fontSize = _a.fontSize,\n    color = _a.color,\n    incrementColor = _a.incrementColor,\n    decrementColor = _a.decrementColor,\n    digitStyles = _a.digitStyles;\n  var _b = useState(0),\n    position = _b[0],\n    setPosition = _b[1];\n  var _c = useState(null),\n    animationClass = _c[0],\n    setAnimationClass = _c[1];\n  var currentDigit = +digit;\n  var previousDigit = usePrevious(+currentDigit);\n  var columnContainer = useRef(null);\n  var handleAnimationComplete = useCallback(debounce(function () {\n    setAnimationClass(\"\");\n  }, 200), []);\n  var setColumnToNumber = useCallback(function (number) {\n    var _a, _b;\n    if ((_a = columnContainer === null || columnContainer === void 0 ? void 0 : columnContainer.current) === null || _a === void 0 ? void 0 : _a.clientHeight) {\n      setPosition(((_b = columnContainer === null || columnContainer === void 0 ? void 0 : columnContainer.current) === null || _b === void 0 ? void 0 : _b.clientHeight) * parseInt(number, 10));\n    }\n  }, []);\n  useEffect(function () {\n    setAnimationClass(previousDigit !== currentDigit ? delta : '');\n  }, [digit, delta]);\n  useEffect(function () {\n    setColumnToNumber(digit);\n  }, [digit, setColumnToNumber]);\n  // If digit is negative symbol, simply return an unanimated character\n  if (digit === '-') {\n    return React.createElement(\"span\", {\n      style: __assign({\n        color: color,\n        fontSize: fontSize,\n        lineHeight: fontSize,\n        marginRight: \"calc(\".concat(fontSize, \" / 5)\")\n      }, digitStyles)\n    }, digit);\n  }\n  return React.createElement(\"div\", {\n    className: 'ticker-column-container',\n    ref: columnContainer,\n    style: __assign({\n      fontSize: fontSize,\n      lineHeight: fontSize,\n      height: 'auto',\n      color: color,\n      '--increment-color': \"\".concat(incrementColor),\n      '--decrement-color': \"\".concat(decrementColor)\n    }, digitStyles)\n  }, React.createElement(motion.div, {\n    animate: {\n      x: 0,\n      y: position\n    },\n    className: \"ticker-column \".concat(animationClass),\n    onAnimationComplete: handleAnimationComplete\n  }, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0].map(function (num) {\n    return React.createElement(\"div\", {\n      className: 'ticker-digit',\n      key: num\n    }, React.createElement(\"span\", {\n      style: __assign({\n        fontSize: fontSize,\n        lineHeight: fontSize\n      }, digitStyles)\n    }, num));\n  })), React.createElement(\"span\", {\n    className: 'number-placeholder'\n  }, \"0\"));\n}, function (prevProps, nextProps) {\n  return prevProps.digit === nextProps.digit && prevProps.delta === nextProps.delta;\n});\n// Main component\nvar AnimatedCounter = function (_a) {\n  var _b = _a.value,\n    value = _b === void 0 ? 0 : _b,\n    _c = _a.fontSize,\n    fontSize = _c === void 0 ? '18px' : _c,\n    _d = _a.color,\n    color = _d === void 0 ? 'black' : _d,\n    _e = _a.incrementColor,\n    incrementColor = _e === void 0 ? '#32cd32' : _e,\n    _f = _a.decrementColor,\n    decrementColor = _f === void 0 ? '#fe6862' : _f,\n    _g = _a.includeDecimals,\n    includeDecimals = _g === void 0 ? true : _g,\n    _h = _a.decimalPrecision,\n    decimalPrecision = _h === void 0 ? 2 : _h,\n    _j = _a.includeCommas,\n    includeCommas = _j === void 0 ? false : _j,\n    _k = _a.containerStyles,\n    containerStyles = _k === void 0 ? {} : _k,\n    _l = _a.digitStyles,\n    digitStyles = _l === void 0 ? {} : _l;\n  var numArray = formatForDisplay(Math.abs(value), includeDecimals, decimalPrecision, includeCommas);\n  var previousNumber = usePrevious(value);\n  var isNegative = value < 0;\n  var delta = null;\n  if (previousNumber !== null) {\n    if (value > previousNumber) {\n      delta = 'increase';\n    } else if (value < previousNumber) {\n      delta = 'decrease';\n    }\n  }\n  return React.createElement(motion.div, {\n    layout: true,\n    className: 'ticker-view',\n    style: __assign({}, containerStyles)\n  }, numArray.map(function (number, index) {\n    return number === \".\" || number === \",\" ? React.createElement(DecimalColumn, {\n      key: index,\n      fontSize: fontSize,\n      color: color,\n      isComma: number === \",\",\n      digitStyles: digitStyles\n    }) : React.createElement(NumberColumn, {\n      key: index,\n      digit: number,\n      delta: delta,\n      color: color,\n      fontSize: fontSize,\n      incrementColor: incrementColor,\n      decrementColor: decrementColor,\n      digitStyles: digitStyles\n    });\n  }), isNegative && React.createElement(NumberColumn, {\n    key: 'negative-feedback',\n    digit: '-',\n    delta: delta,\n    color: color,\n    fontSize: fontSize,\n    incrementColor: incrementColor,\n    decrementColor: decrementColor,\n    digitStyles: digitStyles\n  }));\n};\nexport default AnimatedCounter;","map":{"version":3,"names":["__assign","React","memo","useEffect","useCallback","useRef","useState","motion","formatForDisplay","usePrevious","debounce","DecimalColumn","_a","fontSize","color","isComma","digitStyles","createElement","style","lineHeight","marginLeft","concat","NumberColumn","digit","delta","incrementColor","decrementColor","_b","position","setPosition","_c","animationClass","setAnimationClass","currentDigit","previousDigit","columnContainer","handleAnimationComplete","setColumnToNumber","number","current","clientHeight","parseInt","marginRight","className","ref","height","div","animate","x","y","onAnimationComplete","map","num","key","prevProps","nextProps","AnimatedCounter","value","_d","_e","_f","_g","includeDecimals","_h","decimalPrecision","_j","includeCommas","_k","containerStyles","_l","numArray","Math","abs","previousNumber","isNegative","layout","index"],"sources":["/Users/admin/Desktop/untitled folder/bo_react_test/node_modules/react-animated-counter/dist/esm/AnimatedCounter.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport React, { memo, useEffect, useCallback, useRef, useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { formatForDisplay } from \"./util\";\nimport { usePrevious } from \"./hooks\";\nimport debounce from 'lodash/debounce';\nimport './styles.css';\n// Decimal element component\nvar DecimalColumn = function (_a) {\n    var fontSize = _a.fontSize, color = _a.color, isComma = _a.isComma, digitStyles = _a.digitStyles;\n    return (React.createElement(\"span\", { style: __assign({ fontSize: fontSize, lineHeight: fontSize, color: color, marginLeft: \"calc(-\".concat(fontSize, \" / 10)\") }, digitStyles) }, isComma ? ',' : '.'));\n};\n// Individual number element component\nvar NumberColumn = memo(function (_a) {\n    var digit = _a.digit, delta = _a.delta, fontSize = _a.fontSize, color = _a.color, incrementColor = _a.incrementColor, decrementColor = _a.decrementColor, digitStyles = _a.digitStyles;\n    var _b = useState(0), position = _b[0], setPosition = _b[1];\n    var _c = useState(null), animationClass = _c[0], setAnimationClass = _c[1];\n    var currentDigit = +digit;\n    var previousDigit = usePrevious(+currentDigit);\n    var columnContainer = useRef(null);\n    var handleAnimationComplete = useCallback(debounce(function () {\n        setAnimationClass(\"\");\n    }, 200), []);\n    var setColumnToNumber = useCallback(function (number) {\n        var _a, _b;\n        if ((_a = columnContainer === null || columnContainer === void 0 ? void 0 : columnContainer.current) === null || _a === void 0 ? void 0 : _a.clientHeight) {\n            setPosition(((_b = columnContainer === null || columnContainer === void 0 ? void 0 : columnContainer.current) === null || _b === void 0 ? void 0 : _b.clientHeight) * parseInt(number, 10));\n        }\n    }, []);\n    useEffect(function () {\n        setAnimationClass(previousDigit !== currentDigit ? delta : '');\n    }, [digit, delta]);\n    useEffect(function () {\n        setColumnToNumber(digit);\n    }, [digit, setColumnToNumber]);\n    // If digit is negative symbol, simply return an unanimated character\n    if (digit === '-') {\n        return (React.createElement(\"span\", { style: __assign({ color: color, fontSize: fontSize, lineHeight: fontSize, marginRight: \"calc(\".concat(fontSize, \" / 5)\") }, digitStyles) }, digit));\n    }\n    return (React.createElement(\"div\", { className: 'ticker-column-container', ref: columnContainer, style: __assign({ fontSize: fontSize, lineHeight: fontSize, height: 'auto', color: color, '--increment-color': \"\".concat(incrementColor), '--decrement-color': \"\".concat(decrementColor) }, digitStyles) },\n        React.createElement(motion.div, { animate: { x: 0, y: position }, className: \"ticker-column \".concat(animationClass), onAnimationComplete: handleAnimationComplete }, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0].map(function (num) { return (React.createElement(\"div\", { className: 'ticker-digit', key: num },\n            React.createElement(\"span\", { style: __assign({ fontSize: fontSize, lineHeight: fontSize }, digitStyles) }, num))); })),\n        React.createElement(\"span\", { className: 'number-placeholder' }, \"0\")));\n}, function (prevProps, nextProps) { return prevProps.digit === nextProps.digit && prevProps.delta === nextProps.delta; });\n// Main component\nvar AnimatedCounter = function (_a) {\n    var _b = _a.value, value = _b === void 0 ? 0 : _b, _c = _a.fontSize, fontSize = _c === void 0 ? '18px' : _c, _d = _a.color, color = _d === void 0 ? 'black' : _d, _e = _a.incrementColor, incrementColor = _e === void 0 ? '#32cd32' : _e, _f = _a.decrementColor, decrementColor = _f === void 0 ? '#fe6862' : _f, _g = _a.includeDecimals, includeDecimals = _g === void 0 ? true : _g, _h = _a.decimalPrecision, decimalPrecision = _h === void 0 ? 2 : _h, _j = _a.includeCommas, includeCommas = _j === void 0 ? false : _j, _k = _a.containerStyles, containerStyles = _k === void 0 ? {} : _k, _l = _a.digitStyles, digitStyles = _l === void 0 ? {} : _l;\n    var numArray = formatForDisplay(Math.abs(value), includeDecimals, decimalPrecision, includeCommas);\n    var previousNumber = usePrevious(value);\n    var isNegative = value < 0;\n    var delta = null;\n    if (previousNumber !== null) {\n        if (value > previousNumber) {\n            delta = 'increase';\n        }\n        else if (value < previousNumber) {\n            delta = 'decrease';\n        }\n    }\n    return (React.createElement(motion.div, { layout: true, className: 'ticker-view', style: __assign({}, containerStyles) },\n        numArray.map(function (number, index) {\n            return number === \".\" || number === \",\" ? (React.createElement(DecimalColumn, { key: index, fontSize: fontSize, color: color, isComma: number === \",\", digitStyles: digitStyles })) : (React.createElement(NumberColumn, { key: index, digit: number, delta: delta, color: color, fontSize: fontSize, incrementColor: incrementColor, decrementColor: decrementColor, digitStyles: digitStyles }));\n        }),\n        isNegative &&\n            React.createElement(NumberColumn, { key: 'negative-feedback', digit: '-', delta: delta, color: color, fontSize: fontSize, incrementColor: incrementColor, decrementColor: decrementColor, digitStyles: digitStyles })));\n};\nexport default AnimatedCounter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}