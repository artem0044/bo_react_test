{"ast":null,"code":"import moment from'moment';export const convertToUserTimezone=function(utcTime){let format=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"YYYY-MM-DD HH:mm:ss\";const savedTimezone=localStorage.getItem(\"userTimezone\");const userTimezone=savedTimezone?savedTimezone:moment.tz.guess();return moment.utc(utcTime).tz(userTimezone).format(format);};export const getUserTimezone=()=>{const savedTimezone=localStorage.getItem(\"userTimezone\");return savedTimezone?savedTimezone:moment.tz.guess();};export const formatUTC=function(timestamp){let format=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"YYYY-MM-DD-HH:mm\";return moment(timestamp*1000).tz(\"UTC\").format(format);};export const getAdjustedTime=function(timestamp,offset){let unit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"minute\";return moment(timestamp*1000).tz(\"UTC\").subtract(offset,unit).format(\"YYYY-MM-DD-HH:mm\");};","map":{"version":3,"names":["moment","convertToUserTimezone","utcTime","format","arguments","length","undefined","savedTimezone","localStorage","getItem","userTimezone","tz","guess","utc","getUserTimezone","formatUTC","timestamp","getAdjustedTime","offset","unit","subtract"],"sources":["/Users/admin/Desktop/untitled folder/bo_react_test/src/helpers/timezone.js"],"sourcesContent":["import moment from 'moment';\n\nexport const convertToUserTimezone = (utcTime, format = \"YYYY-MM-DD HH:mm:ss\") => {\n  const savedTimezone = localStorage.getItem(\"userTimezone\");\n  const userTimezone = savedTimezone ? savedTimezone : moment.tz.guess();\n\n  return moment.utc(utcTime).tz(userTimezone).format(format);\n};\n\nexport const getUserTimezone = () => {\n  const savedTimezone = localStorage.getItem(\"userTimezone\");\n  return savedTimezone ? savedTimezone : moment.tz.guess()\n};\n\nexport const formatUTC = (timestamp, format = \"YYYY-MM-DD-HH:mm\") =>\n  moment(timestamp * 1000).tz(\"UTC\").format(format);\n\nexport const getAdjustedTime = (timestamp, offset, unit = \"minute\") =>\n  moment(timestamp * 1000).tz(\"UTC\").subtract(offset, unit).format(\"YYYY-MM-DD-HH:mm\");"],"mappings":"AAAA,MAAO,CAAAA,MAAM,KAAM,QAAQ,CAE3B,MAAO,MAAM,CAAAC,qBAAqB,CAAG,QAAAA,CAACC,OAAO,CAAqC,IAAnC,CAAAC,MAAM,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,qBAAqB,CAC3E,KAAM,CAAAG,aAAa,CAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAC1D,KAAM,CAAAC,YAAY,CAAGH,aAAa,CAAGA,aAAa,CAAGP,MAAM,CAACW,EAAE,CAACC,KAAK,CAAC,CAAC,CAEtE,MAAO,CAAAZ,MAAM,CAACa,GAAG,CAACX,OAAO,CAAC,CAACS,EAAE,CAACD,YAAY,CAAC,CAACP,MAAM,CAACA,MAAM,CAAC,CAC5D,CAAC,CAED,MAAO,MAAM,CAAAW,eAAe,CAAGA,CAAA,GAAM,CACnC,KAAM,CAAAP,aAAa,CAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAC1D,MAAO,CAAAF,aAAa,CAAGA,aAAa,CAAGP,MAAM,CAACW,EAAE,CAACC,KAAK,CAAC,CAAC,CAC1D,CAAC,CAED,MAAO,MAAM,CAAAG,SAAS,CAAG,QAAAA,CAACC,SAAS,KAAE,CAAAb,MAAM,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,kBAAkB,OAC9D,CAAAJ,MAAM,CAACgB,SAAS,CAAG,IAAI,CAAC,CAACL,EAAE,CAAC,KAAK,CAAC,CAACR,MAAM,CAACA,MAAM,CAAC,GAEnD,MAAO,MAAM,CAAAc,eAAe,CAAG,QAAAA,CAACD,SAAS,CAAEE,MAAM,KAAE,CAAAC,IAAI,CAAAf,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,QAAQ,OAChE,CAAAJ,MAAM,CAACgB,SAAS,CAAG,IAAI,CAAC,CAACL,EAAE,CAAC,KAAK,CAAC,CAACS,QAAQ,CAACF,MAAM,CAAEC,IAAI,CAAC,CAAChB,MAAM,CAAC,kBAAkB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}