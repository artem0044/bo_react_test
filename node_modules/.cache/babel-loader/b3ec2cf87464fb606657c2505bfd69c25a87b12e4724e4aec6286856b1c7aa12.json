{"ast":null,"code":"var PART_TYPES_TO_COLLAPSE = new Set(['unit', 'exponentMinusSign', 'minusSign', 'plusSign', 'percentSign', 'exponentSeparator', 'percent', 'percentSign', 'currency', 'literal']);\n/**\n * https://tc39.es/ecma402/#sec-collapsenumberrange\n * LDML: https://unicode-org.github.io/cldr/ldml/tr35-numbers.html#collapsing-number-ranges\n */\nexport function CollapseNumberRange(numberFormat, result, _a) {\n  var getInternalSlots = _a.getInternalSlots;\n  var internalSlots = getInternalSlots(numberFormat);\n  var symbols = internalSlots.dataLocaleData.numbers.symbols[internalSlots.numberingSystem];\n  var rangeSignRegex = new RegExp(\"s?[\".concat(symbols.rangeSign, \"]s?\"));\n  var rangeSignIndex = result.findIndex(function (r) {\n    return r.type === 'literal' && rangeSignRegex.test(r.value);\n  });\n  var prefixSignParts = [];\n  for (var i = rangeSignIndex - 1; i >= 0; i--) {\n    if (!PART_TYPES_TO_COLLAPSE.has(result[i].type)) {\n      break;\n    }\n    prefixSignParts.unshift(result[i]);\n  }\n  // Don't collapse if it's a single code point\n  if (Array.from(prefixSignParts.map(function (p) {\n    return p.value;\n  }).join('')).length > 1) {\n    var newResult = Array.from(result);\n    newResult.splice(rangeSignIndex - prefixSignParts.length, prefixSignParts.length);\n    return newResult;\n  }\n  var suffixSignParts = [];\n  for (var i = rangeSignIndex + 1; i < result.length; i++) {\n    if (!PART_TYPES_TO_COLLAPSE.has(result[i].type)) {\n      break;\n    }\n    suffixSignParts.push(result[i]);\n  }\n  // Don't collapse if it's a single code point\n  if (Array.from(suffixSignParts.map(function (p) {\n    return p.value;\n  }).join('')).length > 1) {\n    var newResult = Array.from(result);\n    newResult.splice(rangeSignIndex + 1, suffixSignParts.length);\n    return newResult;\n  }\n  return result;\n}","map":{"version":3,"names":["PART_TYPES_TO_COLLAPSE","Set","CollapseNumberRange","numberFormat","result","_a","getInternalSlots","internalSlots","symbols","dataLocaleData","numbers","numberingSystem","rangeSignRegex","RegExp","concat","rangeSign","rangeSignIndex","findIndex","r","type","test","value","prefixSignParts","i","has","unshift","Array","from","map","p","join","length","newResult","splice","suffixSignParts","push"],"sources":["/Users/admin/Desktop/untitled folder/bo_react_test/node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/CollapseNumberRange.js"],"sourcesContent":["var PART_TYPES_TO_COLLAPSE = new Set([\n    'unit',\n    'exponentMinusSign',\n    'minusSign',\n    'plusSign',\n    'percentSign',\n    'exponentSeparator',\n    'percent',\n    'percentSign',\n    'currency',\n    'literal',\n]);\n/**\n * https://tc39.es/ecma402/#sec-collapsenumberrange\n * LDML: https://unicode-org.github.io/cldr/ldml/tr35-numbers.html#collapsing-number-ranges\n */\nexport function CollapseNumberRange(numberFormat, result, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(numberFormat);\n    var symbols = internalSlots.dataLocaleData.numbers.symbols[internalSlots.numberingSystem];\n    var rangeSignRegex = new RegExp(\"s?[\".concat(symbols.rangeSign, \"]s?\"));\n    var rangeSignIndex = result.findIndex(function (r) { return r.type === 'literal' && rangeSignRegex.test(r.value); });\n    var prefixSignParts = [];\n    for (var i = rangeSignIndex - 1; i >= 0; i--) {\n        if (!PART_TYPES_TO_COLLAPSE.has(result[i].type)) {\n            break;\n        }\n        prefixSignParts.unshift(result[i]);\n    }\n    // Don't collapse if it's a single code point\n    if (Array.from(prefixSignParts.map(function (p) { return p.value; }).join('')).length > 1) {\n        var newResult = Array.from(result);\n        newResult.splice(rangeSignIndex - prefixSignParts.length, prefixSignParts.length);\n        return newResult;\n    }\n    var suffixSignParts = [];\n    for (var i = rangeSignIndex + 1; i < result.length; i++) {\n        if (!PART_TYPES_TO_COLLAPSE.has(result[i].type)) {\n            break;\n        }\n        suffixSignParts.push(result[i]);\n    }\n    // Don't collapse if it's a single code point\n    if (Array.from(suffixSignParts.map(function (p) { return p.value; }).join('')).length > 1) {\n        var newResult = Array.from(result);\n        newResult.splice(rangeSignIndex + 1, suffixSignParts.length);\n        return newResult;\n    }\n    return result;\n}\n"],"mappings":"AAAA,IAAIA,sBAAsB,GAAG,IAAIC,GAAG,CAAC,CACjC,MAAM,EACN,mBAAmB,EACnB,WAAW,EACX,UAAU,EACV,aAAa,EACb,mBAAmB,EACnB,SAAS,EACT,aAAa,EACb,UAAU,EACV,SAAS,CACZ,CAAC;AACF;AACA;AACA;AACA;AACA,OAAO,SAASC,mBAAmBA,CAACC,YAAY,EAAEC,MAAM,EAAEC,EAAE,EAAE;EAC1D,IAAIC,gBAAgB,GAAGD,EAAE,CAACC,gBAAgB;EAC1C,IAAIC,aAAa,GAAGD,gBAAgB,CAACH,YAAY,CAAC;EAClD,IAAIK,OAAO,GAAGD,aAAa,CAACE,cAAc,CAACC,OAAO,CAACF,OAAO,CAACD,aAAa,CAACI,eAAe,CAAC;EACzF,IAAIC,cAAc,GAAG,IAAIC,MAAM,CAAC,KAAK,CAACC,MAAM,CAACN,OAAO,CAACO,SAAS,EAAE,KAAK,CAAC,CAAC;EACvE,IAAIC,cAAc,GAAGZ,MAAM,CAACa,SAAS,CAAC,UAAUC,CAAC,EAAE;IAAE,OAAOA,CAAC,CAACC,IAAI,KAAK,SAAS,IAAIP,cAAc,CAACQ,IAAI,CAACF,CAAC,CAACG,KAAK,CAAC;EAAE,CAAC,CAAC;EACpH,IAAIC,eAAe,GAAG,EAAE;EACxB,KAAK,IAAIC,CAAC,GAAGP,cAAc,GAAG,CAAC,EAAEO,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1C,IAAI,CAACvB,sBAAsB,CAACwB,GAAG,CAACpB,MAAM,CAACmB,CAAC,CAAC,CAACJ,IAAI,CAAC,EAAE;MAC7C;IACJ;IACAG,eAAe,CAACG,OAAO,CAACrB,MAAM,CAACmB,CAAC,CAAC,CAAC;EACtC;EACA;EACA,IAAIG,KAAK,CAACC,IAAI,CAACL,eAAe,CAACM,GAAG,CAAC,UAAUC,CAAC,EAAE;IAAE,OAAOA,CAAC,CAACR,KAAK;EAAE,CAAC,CAAC,CAACS,IAAI,CAAC,EAAE,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;IACvF,IAAIC,SAAS,GAAGN,KAAK,CAACC,IAAI,CAACvB,MAAM,CAAC;IAClC4B,SAAS,CAACC,MAAM,CAACjB,cAAc,GAAGM,eAAe,CAACS,MAAM,EAAET,eAAe,CAACS,MAAM,CAAC;IACjF,OAAOC,SAAS;EACpB;EACA,IAAIE,eAAe,GAAG,EAAE;EACxB,KAAK,IAAIX,CAAC,GAAGP,cAAc,GAAG,CAAC,EAAEO,CAAC,GAAGnB,MAAM,CAAC2B,MAAM,EAAER,CAAC,EAAE,EAAE;IACrD,IAAI,CAACvB,sBAAsB,CAACwB,GAAG,CAACpB,MAAM,CAACmB,CAAC,CAAC,CAACJ,IAAI,CAAC,EAAE;MAC7C;IACJ;IACAe,eAAe,CAACC,IAAI,CAAC/B,MAAM,CAACmB,CAAC,CAAC,CAAC;EACnC;EACA;EACA,IAAIG,KAAK,CAACC,IAAI,CAACO,eAAe,CAACN,GAAG,CAAC,UAAUC,CAAC,EAAE;IAAE,OAAOA,CAAC,CAACR,KAAK;EAAE,CAAC,CAAC,CAACS,IAAI,CAAC,EAAE,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;IACvF,IAAIC,SAAS,GAAGN,KAAK,CAACC,IAAI,CAACvB,MAAM,CAAC;IAClC4B,SAAS,CAACC,MAAM,CAACjB,cAAc,GAAG,CAAC,EAAEkB,eAAe,CAACH,MAAM,CAAC;IAC5D,OAAOC,SAAS;EACpB;EACA,OAAO5B,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}